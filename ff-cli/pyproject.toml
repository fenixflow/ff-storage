[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ff-cli"
version = "0.4.1"
description = "Fenix-wide CLI with plugin architecture for project-specific commands"
readme = "README.md"
requires-python = ">=3.10"
license = "LicenseRef-Proprietary"
authors = [
    {name = "Fenixflow", email = "dev@fenixflow.com"}
]
keywords = ["cli", "fenix", "plugin", "command-line"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "typer>=0.16.0",
    "rich>=13.0.0",
    "tomli-w>=1.0.0",
    "shellingham>=1.5.0",  # For shell detection
    "httpx>=0.27.0",  # For downloading plugins
    "pydantic>=2.0.0",  # For configuration validation
    "pydantic-settings>=2.0.0",  # For settings management
    "pyyaml>=6.0.0",  # For YAML service definitions
    "toml>=0.10.2",  # For TOML branding config
    "jinja2>=3.1.0",  # For template scaffolding
    "ff-logger>=0.3.0",  # For logging
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4",
    "pytest-cov>=4.1",
    "black>=23.0",
    "ruff>=0.1",
    "mypy>=1.0",
    "pytest-mock>=3.12",
]

[project.scripts]
fenix = "ff_cli.main:run"

[project.urls]
repository = "https://gitlab.com/fenixflow/fenix-packages"
documentation = "https://gitlab.com/fenixflow/fenix-packages/-/tree/main/ff-cli"
issues = "https://gitlab.com/fenixflow/fenix-packages/-/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/ff_cli"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function call in argument defaults (needed for Typer)
]

[tool.ruff.lint.per-file-ignores]
"src/ff_cli/plugin_creator.py" = ["F821"]  # Ignore undefined names in template strings

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
